# This is a basic workflow that is manually triggered
name: Bohns tests

on:
  # schedule:
  #   - cron: "30 * * * *"
  workflow_dispatch:

jobs:
  getRepoCacheVars:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: regular_middle_cacheKey
        run: echo "current regular_middle_cacheKey = ${{ vars.regular_middle_cacheKey}}"
      - name: Get CF deployments
        id: get_cf_deployments
        run: |
          response=$(curl --request GET \
          --header "Authorization: Bearer ${{ secrets.CF_PAGES_READ_ALL_API }}" \
          --header 'Content-Type: application/json' \
          --url "https://api.cloudflare.com/client/v4/accounts/${{ secrets.CF_ACCOUNT_ID }}/pages/projects/${{ vars.REGULAR_MIDDLE_CF_PROJECT_NAME }}/deployments")
          echo "response_out: $response"
          echo "=========="
          echo "response_out=$(echo $response| tr '\n' ' ')" >> $GITHUB_OUTPUT
      - name: Get created_on
        id: get_created_on
        run: |
          created_on=$(jq -r '.result[0].created_on' <<< '${{ steps.get_cf_deployments.outputs.response_out }}' | date -u -f - +%s)
          echo "created_on is $created_on"
          echo "created_on=$created_on" >> $GITHUB_OUTPUT
      - name: values debug 1
        id: dbg1
        run: |
          echo "response_out is ${{ steps.get_cf_deployments.outputs.response_out }}"
      - name: values debug 2
        id: dbg2
        run: |
          #echo "created_on is $created_on"
          echo "created_on is ${{ steps.get_created_on.outputs.created_on }}"
      - name: github var update
        id: gh_var_update
        run: |
          curl -L \
          -X PATCH \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.GH_NOITAMAP_VARS_ACCESS }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/acidflow-noita/noitamap/actions/variables/REGULAR_MIDDLE_CF_PROJECT_NAME \
          -d '{"name":"REGULAR_MIDDLE_CF_PROJECT_NAME","value":"$created_on"}'

      - name: github var update
        id: gh_var_update
        run: |
          curl -L \
            -X PATCH \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GH_NOITAMAP_VARS_ACCESS }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/acidflow-noita/noitamap/actions/variables/REGULAR_MIDDLE_CACHEKEY\
            -d "{\"name\":\"REGULAR_MIDDLE_CACHEKEY\",\"value\":\"${{ steps.get_created_on.outputs.created_on }}\"}"

        # $secrets.CF_PAGES_READ_ALL_API: ${{ secrets.CF_PAGES_READ_ALL_API }}
        # $secrets.CF_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
        # $REGULAR_MIDDLE_CF_PROJECT_NAME: ${{ REGULAR_MIDDLE_CF_PROJECT_NAME}}

        # run: curl --request GET --header 'Authorization: Bearer ${{ secrets.CF_PAGES_READ_ALL_API }}' --header 'Content-Type: application/json' --url 'api.cloudflare.com/client/v4/accounts/$secrets.CF_ACCOUNT_ID/pages/projects/$REGULAR_MIDDLE_CF_PROJECT_NAME/deployments/latest'
      # - name: regular_left_pw_cacheKey
      #   run: echo "regular_left_pw_cacheKey = vars.$regular_left_pw_cacheKey"
      # - name: regular_right_pw_cacheKey
      #   run: echo "regular_right_pw_cacheKey = vars.$regular_right_pw_cacheKey"
      # - name: nightmare_hd_cacheKey
      #   run: echo "nightmare_hd_cacheKey = vars.$nightmare_hd_cacheKey"
      # - name: new_game_plus_hd_cacheKey
      #   run: echo "new_game_plus_hd_cacheKey = vars.$new_game_plus_hd_cacheKey"
      # - name: regular_main_branch_cacheKey
      #   run: echo "regular_main_branch_cacheKey = vars.$regular_main_branch_cacheKey"
      # - name: purgatory_cacheKey
      #   run: echo "purgatory_cacheKey = vars.$purgatory_cacheKey"
      # - name: apotheosis_cacheKey
      #   run: echo "apotheosis_cacheKey = vars.$apotheosis_cacheKey"
      # - name: apotheosis_new_game_plus_cacheKey
      #   run: echo "apotheosis_new_game_plus_cacheKey = vars.$apotheosis_new_game_plus_cacheKey"
      # - name: noitavania_cacheKey
      #   run: echo "noitavania_cacheKey = vars.$noitavania_cacheKey"
      # - name: noitavania_new_game_plus_cacheKey
      #   run: echo "noitavania_new_game_plus_cacheKey = vars.$noitavania_new_game_plus_cacheKey"
      # - name: alternate_biomes_cacheKey
      #   run: echo "alternate_biomes_cacheKey = vars.$alternate_biomes_cacheKey"
      # - name: apotheosis_tuonela_cacheKey
      #   run: echo "apotheosis_tuonela_cacheKey = vars.$apotheosis_tuonela_cacheKey"
